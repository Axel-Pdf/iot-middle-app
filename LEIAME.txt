Middleware básico para utilização em soluções IoT utilizando Python

API utilizada: Pubnub (https://www.pubnub.com/docs/python/pubnub-python-sdk)


Arquitetura da API Pubnub utiliza um esquema de publicação/assinatura de mensagens 
entre dispositivos conectados

    - Dispositivos são conectados a canais, efetuando "publicações" e 
        "assinaturas", ou seja, transmitindo e lendo fluxo de dados em um mesmo espaço;
    
    - Ao se inscrever em um dado canal, dispositivos recebem todo o fluxo desse
         canal, de todos os dispositivos envolvidos, devendo tratar da 
         utilizacao/armazenamento/descarte dessas;
         
    - API trata de todos os eventos de conexão/desconexão/erros;
    
    - Mensagens são transmitidas em JSON, devendo se limitar a, 
        preferencialmente, 1.5~2.0KB;
    

################################## INSTALAÇÃO ######################################

Bibliotecas utilizadas (instalar via pip):

  Firebase - pip install python-firebase
  Pubnub - pip install 'pubnub>=4.1.6'    

################################## INSTRUÇÕES ######################################

1 - Primeiramente, criar uma conta gratuita na plataforma de IDE Pubnub
	(nota: preferencialmente criar conta com google)

https://dashboard.pubnub.com/signup

2 - Ao logar em sua conta, acessar a aba chaves (Keys) e criar um novo set de chaves (Create New Keyset)
		- criado o novo keyset, clicar neste e, na página de gerenciamento, ativar 'Storage & Playback'
		
3 - Copiar Publish Key & Subscribe Key da sessão de chaves e colar nos arquivos 
    dispositivo.py (em md.InicializadorPubnub) e init.py  na inicialização de Console ('sub', 'pub') 
    [primiero Subscribe depois Publish]
    
4 - Abrir janela de prompt e rodar dispositivo.py, inserindo o nome do canal criado na página do Pubnub
    e o número de registros aleatórios a lançar
	
5 - Inicializar init.py
		Ao iniciar o console, digitar 'help' para instruções
		
		seguir lógica de prompt 'comando argumento'
	
################################### OBSERVAÇÕES ###################################

1 - Função de captura de stream não finalizada/testada